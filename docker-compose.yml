version: '3'
services:
  frontapp:
    container_name: frontapp
    build:
      context: ./frontapp
      dockerfile: Dockerfile
    volumes:
      - ./frontapp/src:/opt/app/src
    ports:
      - 3000:3000
    networks:
      - directus

  database:
    container_name: database
    image: mysql:latest
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: demo_db
      MYSQL_USER: demo_user
      MYSQL_PASSWORD: demo_password
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      TZ: 'Asia/Tokyo'
    ports:
      - 3306:3306
    networks:
      - directus
    volumes:
      - demo-db-volume:/var/lib/mysql
      - ./data/conf.d:/etc/mysql/conf.d
      - ./data/sql:/docker-entrypoint-initdb.d

  cache:
    container_name: cache
    image: redis:6
    networks:
      - directus

  directus:
    container_name: directus
    image: directus/directus:latest
    ports:
      - 8055:8055
    volumes:
      # By default, uploads are stored in /directus/uploads
      # Always make sure your volumes matches the storage root when using
      # local driver
      - ./uploads:/directus/uploads
      # Make sure to also mount the volume when using SQLite
      # - ./database:/directus/database
      # If you want to load extensions from the host
      # - ./extensions:/directus/extensions
    networks:
      - directus
    depends_on:
      - cache
      - database
    environment:
      KEY: 'd5d752fd-896e-445e-9f5b-b9f3661b6df9'
      SECRET: '89c3dac8-e537-4dce-96ac-d1753455f419'

      DB_CLIENT: 'mysql'
      DB_HOST: 'database'
      DB_PORT: '3306'
      DB_DATABASE: 'demo_db'
      DB_USER: 'demo_user'
      DB_PASSWORD: 'demo_password'

      CACHE_ENABLED: 'true'
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache:6379'

      ADMIN_EMAIL: 'admin@example.com'
      ADMIN_PASSWORD: 'd1r3ctu5'

      AUTH_PROVIDERS: 'google'
      AUTH_GOOGLE_DRIVER: 'openid'
      # Replace XXXX with the Client ID
      AUTH_GOOGLE_CLIENT_ID: 'xxxxxxxx'
      # Replace XXXX with the Client Secret
      AUTH_GOOGLE_CLIENT_SECRET: 'xxxxxxxxxxxxx'
      AUTH_GOOGLE_ISSUER_URL: 'https://accounts.google.com'
      AUTH_GOOGLE_IDENTIFIER_KEY: 'email'
      AUTH_GOOGLE_ICON: 'google'
      AUTH_GOOGLE_LABEL: 'Google'
      # This allows users to be automatically created on logins. Use "false" if you want to create users manually
      AUTH_GOOGLE_ALLOW_PUBLIC_REGISTRATION: 'true'
      # Replace this with the Directus Role ID you would want for new users. If this is not properly configured, new users will not have access to Directus
      AUTH_GOOGLE_DEFAULT_ROLE_ID: 'xxxxxxxxxxx'

      # Make sure to set this in production
      # (see https://docs.directus.io/self-hosted/config-options#general)
      # PUBLIC_URL: 'https://directus.example.com'
      PUBLIC_URL: 'http://localhost:3000'

networks:
  directus:

volumes:
  demo-db-volume:
